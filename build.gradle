buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "io.gitlab.arturbosch.detekt:detekt-gradle-plugin:$detekt_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

group 'com.hxdcml'
version '0.0.1'

apply plugin: 'kotlin'
apply plugin: 'idea'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'org.jetbrains.dokka'

task wrapper(type: Wrapper) {
    gradleVersion = '4.5.1'
    distributionType = Wrapper.DistributionType.ALL
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    implementation group: "org.jetbrains.kotlin", name: "kotlin-stdlib-jdk8", version: "$kotlin_version"
    implementation group: 'org.apache.spark', name: 'spark-core_2.11', version: "$spark_version"
    implementation group: 'org.apache.spark', name: 'spark-sql_2.11', version: "$spark_version"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

detekt {
    version = "$detekt_version"
    profile("main") {
        input = "$projectDir/src/main/kotlin"
        config = "$projectDir/detekt.yml"
        filters = ".*test.*,.*/resources/.*,.*/tmp/.*"
        baseline = "$projectDir/reports/baseline.xml"
    }
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/javadoc"
}